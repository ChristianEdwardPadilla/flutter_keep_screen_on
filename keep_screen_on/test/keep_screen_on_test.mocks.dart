// Mocks generated by Mockito 5.0.10 from annotations
// in keep_screen_on/example/ios/.symlinks/plugins/keep_screen_on/test/keep_screen_on_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;

import 'keep_screen_on_test.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [KeepScreenOnPlatformMockMixin].
///
/// See the documentation for Mockito's code generation for more information.
class MockKeepScreenOnPlatformMockMixin extends _i1.Mock
    implements _i2.KeepScreenOnPlatformMockMixin {
  MockKeepScreenOnPlatformMockMixin() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool?> get isOn => (super.noSuchMethod(Invocation.getter(#isOn),
      returnValue: Future<bool?>.value()) as _i3.Future<bool?>);
  @override
  _i3.Future<bool?> get isOff => (super.noSuchMethod(Invocation.getter(#isOff),
      returnValue: Future<bool?>.value()) as _i3.Future<bool?>);
  @override
  _i3.Future<bool> turnOn([bool? on = true]) =>
      (super.noSuchMethod(Invocation.method(#turnOn, [on]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> turnOff() =>
      (super.noSuchMethod(Invocation.method(#turnOff, []),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}
